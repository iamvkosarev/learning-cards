syntax = "proto3";

package learning_cards.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "learning_cards/v1/card.proto";
import "learning_cards/v1/group.proto";

option go_package = "github.com/iamvkosarev/learning-cards/pkg/proto/learning_cards/v1;learning_cards";

service LearningCards {
    rpc CreateCardsGroup (CreateCardsGroupRequest) returns (CreateCardsGroupResponse) {
        option (google.api.http) = {
            post: "/v1/group"
            body: "*"
        };
    };

    rpc ListCardsGroups (google.protobuf.Empty) returns (ListCardsGroupsResponse) {
        option (google.api.http) = {
            get: "/v1/group"
        };
    };

    rpc GetCardsGroup (GetCardsGroupRequest) returns (GetCardsGroupResponse) {
        option (google.api.http) = {
            get: "/v1/group/{group_id}"
        };
    };

    rpc GetCardsGroupCards (GetCardsGroupCardsRequest) returns (GetCardsGroupCardsResponse) {
        option (google.api.http) = {
            get: "/v1/group/{group_id}/cards"
        };
    };

    rpc UpdateGroupAccess (UpdateGroupAccessRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/group/{group_id}/access"
            body: "*"
        };
    }

    rpc UpdateCardsGroupName (UpdateCardsGroupNameRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/group/{group_id}"
            body: "*"
        };
    };

    rpc DeleteCardsGroup (DeleteCardsGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/group/{group_id}"
        };
    };

    rpc AddCard (AddCardRequest) returns (AddCardResponse) {
        option (google.api.http) = {
            post: "/v1/card"
            body: "*"
        };
    };

    rpc GetCard (GetCardRequest) returns (GetCardResponse) {
        option (google.api.http) = {
            get: "/v1/card/{card_id}"
        };
    };

    rpc UpdateCard (UpdateCardRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/card/{card_id}"
            body: "*"
        };
    };

    rpc DeleteCard (DeleteCardRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/card/{card_id}"
        };
    };
}