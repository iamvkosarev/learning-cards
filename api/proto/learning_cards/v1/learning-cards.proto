syntax = "proto3";

package learning_cards.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "learning_cards/v1/card.proto";
import "learning_cards/v1/group.proto";
import "learning_cards/v1/review.proto";

option go_package = "github.com/iamvkosarev/learning-cards/pkg/proto/learning_cards/v1;learning_cards";

service CardService {
    rpc CreateGroup (CreateGroupRequest) returns (CreateGroupResponse) {
        option (google.api.http) = {
            post: "/v1/group"
            body: "*"
        };
    };

    rpc ListGroups (ListGroupsRequest) returns (ListGroupsResponse) {
        option (google.api.http) = {
            get: "/v1/group"
        };
    };

    rpc GetGroup (GetGroupRequest) returns (GetGroupResponse) {
        option (google.api.http) = {
            get: "/v1/group/{group_id}"
        };
    };

    rpc UpdateGroup (UpdateGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/group/{group_id}"
            body: "*"
        };
    };

    rpc DeleteGroup (DeleteGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/group/{group_id}"
        };
    };

    rpc AddCard (AddCardRequest) returns (AddCardResponse) {
        option (google.api.http) = {
            post: "/v1/card"
            body: "*"
        };
    };

    rpc ListCards (ListCardsRequest) returns (ListCardsResponse) {
        option (google.api.http) = {
            get: "/v1/group/{group_id}/cards"
        };
    };

    rpc GetCard (GetCardRequest) returns (GetCardResponse) {
        option (google.api.http) = {
            get: "/v1/card/{card_id}"
        };
    };

    rpc UpdateCard (UpdateCardRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/v1/card/{card_id}"
            body: "*"
        };
    };

    rpc DeleteCard (DeleteCardRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/card/{card_id}"
        };
    };

    rpc HealthCheck (google.protobuf.Empty) returns (google.protobuf.Empty);
}

service ReviewService {
    rpc GetReviewCards (GetReviewCardsRequest) returns (GetReviewCardsResponse) {
        option (google.api.http) = {
            post: "/v1/review/{group_id}/cards"
            body: "*"
        };
    };

    rpc AddReviewResults (AddReviewResultsRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/review/{group_id}/result"
            body: "*"
        };
    };

    rpc GetCardsProgress (GetCardsProgressRequest) returns (GetCardsProgressResponse) {
        option (google.api.http) = {
            get: "/v1/review/{group_id}/progress"
        };
    };
}