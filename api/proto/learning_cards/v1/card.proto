syntax = "proto3";

package learning_cards.v1;

import "validate/validate.proto";

option go_package = "github.com/iamvkosarev/learning-cards/pkg/proto/learning_cards/v1;learning_cards";

message ReadingPair{
    string text = 1;
    string reading = 2;
}

message CardSide {
    string text = 1 [(validate.rules).string = {min_len: 1}];
    repeated ReadingPair reading_pairs = 2;
}

message Card {
    int64 id = 1;
    int64 group_id = 2;
    string front_text = 3 [deprecated = true];
    string back_text = 4 [deprecated = true];
    string created_at = 5;
    /*
    Two values list of card's sides.
    Side's type is based on CardSideType in CardsGroup.card_side_types.
     */
    repeated CardSide sides = 6;
}

message AddCardRequest {
    int64 group_id = 1;
    string front_text = 2 [(validate.rules).string = {min_len: 1}, deprecated = true];
    string back_text = 3 [(validate.rules).string = {min_len: 1}, deprecated = true];
    repeated string sides_text = 4 [
            (validate.rules).repeated = {
                min_items: 2,
                max_items: 2,
                items: {
                    string: {min_len: 1}
                }
            }
    ];
}

message AddCardResponse {
    int64 card_id = 1;
}

message GetCardRequest {
    int64 card_id = 1;
}

message GetCardResponse {
    Card card = 1;
}

message ListCardsRequest {
    int64 group_id = 1;
}

message ListCardsResponse {
    repeated Card cards = 2;
}

message UpdateCardRequest {
    int64 card_id = 1;
    string front_text = 2 [(validate.rules).string = {min_len: 1}, deprecated = true];
    string back_text = 3 [(validate.rules).string = {min_len: 1}, deprecated = true];
    repeated string sides_text = 4 [
        (validate.rules).repeated = {
            min_items: 0,
            max_items: 2
        }
    ];
}

message DeleteCardRequest {
    int64 card_id = 1;
}