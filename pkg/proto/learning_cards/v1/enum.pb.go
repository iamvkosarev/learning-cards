// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.1
// source: learning_cards/v1/enum.proto

package learning_cards

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardSideType int32

const (
	CardSideType_CARD_SIDE_NULL     CardSideType = 0
	CardSideType_CARD_SIDE_JAPANESE CardSideType = 1
)

// Enum value maps for CardSideType.
var (
	CardSideType_name = map[int32]string{
		0: "CARD_SIDE_NULL",
		1: "CARD_SIDE_JAPANESE",
	}
	CardSideType_value = map[string]int32{
		"CARD_SIDE_NULL":     0,
		"CARD_SIDE_JAPANESE": 1,
	}
)

func (x CardSideType) Enum() *CardSideType {
	p := new(CardSideType)
	*p = x
	return p
}

func (x CardSideType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardSideType) Descriptor() protoreflect.EnumDescriptor {
	return file_learning_cards_v1_enum_proto_enumTypes[0].Descriptor()
}

func (CardSideType) Type() protoreflect.EnumType {
	return &file_learning_cards_v1_enum_proto_enumTypes[0]
}

func (x CardSideType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardSideType.Descriptor instead.
func (CardSideType) EnumDescriptor() ([]byte, []int) {
	return file_learning_cards_v1_enum_proto_rawDescGZIP(), []int{0}
}

type GroupVisibility int32

const (
	GroupVisibility_NULL     GroupVisibility = 0
	GroupVisibility_PRIVATE  GroupVisibility = 1
	GroupVisibility_PUBLIC   GroupVisibility = 2
	GroupVisibility_UNLISTED GroupVisibility = 3
)

// Enum value maps for GroupVisibility.
var (
	GroupVisibility_name = map[int32]string{
		0: "NULL",
		1: "PRIVATE",
		2: "PUBLIC",
		3: "UNLISTED",
	}
	GroupVisibility_value = map[string]int32{
		"NULL":     0,
		"PRIVATE":  1,
		"PUBLIC":   2,
		"UNLISTED": 3,
	}
)

func (x GroupVisibility) Enum() *GroupVisibility {
	p := new(GroupVisibility)
	*p = x
	return p
}

func (x GroupVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_learning_cards_v1_enum_proto_enumTypes[1].Descriptor()
}

func (GroupVisibility) Type() protoreflect.EnumType {
	return &file_learning_cards_v1_enum_proto_enumTypes[1]
}

func (x GroupVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupVisibility.Descriptor instead.
func (GroupVisibility) EnumDescriptor() ([]byte, []int) {
	return file_learning_cards_v1_enum_proto_rawDescGZIP(), []int{1}
}

type Mark int32

const (
	Mark_MARK_NULL Mark = 0
	Mark_MARK_A    Mark = 1
	Mark_MARK_B    Mark = 2
	Mark_MARK_C    Mark = 3
	Mark_MARK_D    Mark = 4
	Mark_MARK_E    Mark = 5
)

// Enum value maps for Mark.
var (
	Mark_name = map[int32]string{
		0: "MARK_NULL",
		1: "MARK_A",
		2: "MARK_B",
		3: "MARK_C",
		4: "MARK_D",
		5: "MARK_E",
	}
	Mark_value = map[string]int32{
		"MARK_NULL": 0,
		"MARK_A":    1,
		"MARK_B":    2,
		"MARK_C":    3,
		"MARK_D":    4,
		"MARK_E":    5,
	}
)

func (x Mark) Enum() *Mark {
	p := new(Mark)
	*p = x
	return p
}

func (x Mark) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mark) Descriptor() protoreflect.EnumDescriptor {
	return file_learning_cards_v1_enum_proto_enumTypes[2].Descriptor()
}

func (Mark) Type() protoreflect.EnumType {
	return &file_learning_cards_v1_enum_proto_enumTypes[2]
}

func (x Mark) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mark.Descriptor instead.
func (Mark) EnumDescriptor() ([]byte, []int) {
	return file_learning_cards_v1_enum_proto_rawDescGZIP(), []int{2}
}

type CardAnswer int32

const (
	CardAnswer_EASY CardAnswer = 0
	CardAnswer_GOOD CardAnswer = 1
	CardAnswer_HARD CardAnswer = 2
	CardAnswer_FAIL CardAnswer = 3
)

// Enum value maps for CardAnswer.
var (
	CardAnswer_name = map[int32]string{
		0: "EASY",
		1: "GOOD",
		2: "HARD",
		3: "FAIL",
	}
	CardAnswer_value = map[string]int32{
		"EASY": 0,
		"GOOD": 1,
		"HARD": 2,
		"FAIL": 3,
	}
)

func (x CardAnswer) Enum() *CardAnswer {
	p := new(CardAnswer)
	*p = x
	return p
}

func (x CardAnswer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardAnswer) Descriptor() protoreflect.EnumDescriptor {
	return file_learning_cards_v1_enum_proto_enumTypes[3].Descriptor()
}

func (CardAnswer) Type() protoreflect.EnumType {
	return &file_learning_cards_v1_enum_proto_enumTypes[3]
}

func (x CardAnswer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardAnswer.Descriptor instead.
func (CardAnswer) EnumDescriptor() ([]byte, []int) {
	return file_learning_cards_v1_enum_proto_rawDescGZIP(), []int{3}
}

var File_learning_cards_v1_enum_proto protoreflect.FileDescriptor

const file_learning_cards_v1_enum_proto_rawDesc = "" +
	"\n" +
	"\x1clearning_cards/v1/enum.proto\x12\x11learning_cards.v1*:\n" +
	"\fCardSideType\x12\x12\n" +
	"\x0eCARD_SIDE_NULL\x10\x00\x12\x16\n" +
	"\x12CARD_SIDE_JAPANESE\x10\x01*B\n" +
	"\x0fGroupVisibility\x12\b\n" +
	"\x04NULL\x10\x00\x12\v\n" +
	"\aPRIVATE\x10\x01\x12\n" +
	"\n" +
	"\x06PUBLIC\x10\x02\x12\f\n" +
	"\bUNLISTED\x10\x03*Q\n" +
	"\x04Mark\x12\r\n" +
	"\tMARK_NULL\x10\x00\x12\n" +
	"\n" +
	"\x06MARK_A\x10\x01\x12\n" +
	"\n" +
	"\x06MARK_B\x10\x02\x12\n" +
	"\n" +
	"\x06MARK_C\x10\x03\x12\n" +
	"\n" +
	"\x06MARK_D\x10\x04\x12\n" +
	"\n" +
	"\x06MARK_E\x10\x05*4\n" +
	"\n" +
	"CardAnswer\x12\b\n" +
	"\x04EASY\x10\x00\x12\b\n" +
	"\x04GOOD\x10\x01\x12\b\n" +
	"\x04HARD\x10\x02\x12\b\n" +
	"\x04FAIL\x10\x03BRZPgithub.com/iamvkosarev/learning-cards/pkg/proto/learning_cards/v1;learning_cardsb\x06proto3"

var (
	file_learning_cards_v1_enum_proto_rawDescOnce sync.Once
	file_learning_cards_v1_enum_proto_rawDescData []byte
)

func file_learning_cards_v1_enum_proto_rawDescGZIP() []byte {
	file_learning_cards_v1_enum_proto_rawDescOnce.Do(func() {
		file_learning_cards_v1_enum_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_learning_cards_v1_enum_proto_rawDesc), len(file_learning_cards_v1_enum_proto_rawDesc)))
	})
	return file_learning_cards_v1_enum_proto_rawDescData
}

var file_learning_cards_v1_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_learning_cards_v1_enum_proto_goTypes = []any{
	(CardSideType)(0),    // 0: learning_cards.v1.CardSideType
	(GroupVisibility)(0), // 1: learning_cards.v1.GroupVisibility
	(Mark)(0),            // 2: learning_cards.v1.Mark
	(CardAnswer)(0),      // 3: learning_cards.v1.CardAnswer
}
var file_learning_cards_v1_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_learning_cards_v1_enum_proto_init() }
func file_learning_cards_v1_enum_proto_init() {
	if File_learning_cards_v1_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_learning_cards_v1_enum_proto_rawDesc), len(file_learning_cards_v1_enum_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_learning_cards_v1_enum_proto_goTypes,
		DependencyIndexes: file_learning_cards_v1_enum_proto_depIdxs,
		EnumInfos:         file_learning_cards_v1_enum_proto_enumTypes,
	}.Build()
	File_learning_cards_v1_enum_proto = out.File
	file_learning_cards_v1_enum_proto_goTypes = nil
	file_learning_cards_v1_enum_proto_depIdxs = nil
}
