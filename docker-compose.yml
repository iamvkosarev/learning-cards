services:
  learning-cards-postgres:
    image: postgres:16.3
    container_name: learning-cards-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT_INTERNAL}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - net
  learning-cards:
    container_name: learning-cards-cards
    image: ${IMAGE_NAME:-learning-cards:local}
    volumes:
      - ./.env:/app/.env
      - ./config:/app/config/
    build:
      context: .
      dockerfile: Dockerfile
      target: cards
    ports:
      - "${CARDS_GRPC_PORT}:${CARDS_GRPC_PORT}"
      - "${CARDS_REST_PORT}:${CARDS_REST_PORT}"
    working_dir: /app
    environment:
      DB_URL: "${LEARNING_CARDS_DB_DNS}"
      GRPC_PORT: ${CARDS_GRPC_PORT}
      REST_PORT: ${CARDS_REST_PORT}
    depends_on:
      learning-cards-postgres:
        condition: service_healthy
    command: ["./cards"]
    networks:
      - net
  learning-cards-reviews:
    container_name: learning-cards-reviews
    image: ${IMAGE_REVIEWS_NAME:-learning-cards-reviews:local}
    build:
      context: .
      dockerfile: Dockerfile
      target: reviews
    volumes:
      - ./.env:/app/.env
      - ./config:/app/config/
    ports:
      - "${REVIEWS_GRPC_PORT}:${REVIEWS_GRPC_PORT}"
      - "${REVIEWS_REST_PORT}:${REVIEWS_REST_PORT}"
    working_dir: /app
    environment:
      DB_URL: "${LEARNING_CARDS_DB_DNS}"
      GRPC_PORT: ${REVIEWS_GRPC_PORT}
      REST_PORT: ${REVIEWS_REST_PORT}
    depends_on:
      learning-cards-postgres:
        condition: service_healthy
    command: [ "./reviews" ]
    networks:
      - net

volumes:
  postgres_data:
    name: learning_cards_postgres_data

networks:
  net:
    name: iamvkosarev_network